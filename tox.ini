# Tox (http://tox.testrun.org/) is a tool for running tests in
# multiple virtualenvs. To use it, "pip install tox" and then run
# "tox" from this directory.

[tox]
skipsdist = true
envlist = py{26,27,33,34,35},py{26,27}-oldest,cover,lint

# nosetest -v => more verbose output, allows to detect busy waiting
# loops, especially on Travis

[testenv]
# packages installed separately to ensure that downstream deps problems
# are detected, c.f. #1002
commands =
    pip install -e acme[dev]
    nosetests -v acme
    pip install -e .[dev]
    nosetests -v certbot
    pip install -e certbot-apache
    nosetests -v certbot_apache
    pip install -e certbot-nginx
    nosetests -v certbot_nginx
    pip install -e letshelp-certbot
    nosetests -v letshelp_certbot

setenv =
    PYTHONPATH = {toxinidir}
    PYTHONHASHSEED = 0
# https://testrun.org/tox/latest/example/basic.html#special-handling-of-pythonhas

deps =
    py{26,27}-oldest: cryptography==0.8
    py{26,27}-oldest: configargparse==0.10.0
    py{26,27}-oldest: psutil==2.1.0
    py{26,27}-oldest: PyOpenSSL==0.13
    py{26,27}-oldest: python2-pythondialog==3.2.2rc1

[testenv:py33]
commands =
    pip install -e acme[dev]
    nosetests -v acme

[testenv:py34]
commands =
    pip install -e acme[dev]
    nosetests -v acme

[testenv:py35]
commands =
    pip install -e acme[dev]
    nosetests -v acme

[testenv:cover]
basepython = python2.7
commands =
    pip install -e acme[dev] -e .[dev] -e certbot-apache -e certbot-nginx -e letshelp-certbot
    ./tox.cover.sh

[testenv:lint]
# recent versions of pylint do not support Python 2.6 (#97, #187)
basepython = python2.7
# separating into multiple invocations disables cross package
# duplicate code checking; if one of the commands fails, others will
# continue, but tox return code will reflect previous error
commands =
    pip install -e acme[dev] -e .[dev] -e certbot-apache -e certbot-nginx -e certbot-compatibility-test -e letshelp-certbot
    ./pep8.travis.sh
    pylint --rcfile=.pylintrc certbot
    pylint --rcfile=acme/.pylintrc acme/acme
    pylint --rcfile=.pylintrc certbot-apache/certbot_apache
    pylint --rcfile=.pylintrc certbot-nginx/certbot_nginx
    pylint --rcfile=.pylintrc certbot-compatibility-test/certbot_compatibility_test
    pylint --rcfile=.pylintrc letshelp-certbot/letshelp_certbot

[testenv:apacheconftest]
#basepython = python2.7
commands =
    pip install -e acme -e .[dev] -e certbot-apache -e certbot-nginx -e certbot-compatibility-test -e letshelp-certbot
    {toxinidir}/certbot-apache/certbot_apache/tests/apache-conf-files/apache-conf-test --debian-modules


[testenv:le_auto]
# At the moment, this tests under Python 2.7 only, as only that version is
# readily available on the Trusty Docker image.
commands =
    docker build -t lea letsencrypt-auto-source
    docker run --rm -t -i lea
whitelist_externals =
    docker
passenv = DOCKER_*
